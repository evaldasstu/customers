{"version":3,"sources":["store/customer.actions.js","store/customer.reducer.js","store/index.js","customers/grid/GridRenderers.js","customers/grid/CellTemplates.js","customers/grid/sortHelper.js","customers/grid/Grid.js","customers/useMapboxApi.js","customers/CustomerForm.js","customers/DeleteDialog.js","customers/useCustomers.js","customers/Customers.js","index.js","store/localStorage.js"],"names":["LOAD_CUSTOMER","UPDATE_CUSTOMER","DELETE_CUSTOMER","ADD_CUSTOMER","SELECT_CUSTOMER","modifyCustomerState","customerState","customerChanges","data","map","c","id","store","combineReducers","customers","state","action","type","payload","filter","selectedCustomer","Header","column","getHeaderProps","getSortByToggleProps","className","render","canSort","isSorted","isSortedDesc","Row","props","children","Cell","cell","getCellProps","CustomHeader","alignRight","CustomCell","bold","truncate","Coordinates","lat","lng","href","target","rel","Actions","onEditClicked","onDeleteClicked","customer","onClick","role","tabIndex","compareIgnoreCase","a","b","r1","toLowerCase","r2","CustomersGrid","useMemo","columns","accessor","value","row","original","disableSortBy","columnSetup","useTable","sortTypes","alphanumeric","row1","row2","columnName","values","useSortBy","headers","rows","prepareRow","Table","key","cells","length","colSpan","useMapboxApi","useState","house","setHouse","street","setStreet","city","setCity","zip","setZip","address","setAddress","coordinates","setCoordinates","isError","setIsError","useDebounce","debouncedAddress","useEffect","assemble","concat","slice","url","axios","response","features","center","toPrecision","fetchData","CustomerForm","onSaveConfirmed","onModalClosed","setCustomer","validated","setValidated","injectCoordinates","onHide","firstInput","useRef","current","focus","Modal","show","animation","backdrop","centered","closeButton","Title","Form","noValidate","onSubmit","e","currentTarget","checkValidity","preventDefault","stopPropagation","Body","Group","controlId","Label","Control","name","onChange","ref","required","Feedback","email","as","Col","placeholder","disabled","Footer","Button","variant","DeleteDialog","customerToDelete","onDeleteConfirmed","useCustomers","dispatch","useDispatch","useSelector","addCustomer","addCustomerAction","deleteCustomer","deleteCustomerAction","getCustomers","useCallback","selectCustomer","selectCustomerAction","updateCustomer","updateCustomerAction","Customers","setCustomerToDelete","setAction","Container","fluid","nanoid","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","createStore","customersStore","subscribe","stringify","setItem","saveState","getState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca8c359b.chunk.js","sourcesContent":["export const LOAD_CUSTOMER = 'LOAD_CUSTOMER';\nexport const UPDATE_CUSTOMER = 'UPDATE_CUSTOMER';\nexport const DELETE_CUSTOMER = 'DELETE_CUSTOMER';\nexport const ADD_CUSTOMER = '[ADD_CUSTOMER';\nexport const SELECT_CUSTOMER = 'SELECT_CUSTOMER';\n\nexport const loadCustomersAction = () => ({ type: LOAD_CUSTOMER });\n\nexport const selectCustomerAction = (customer) => ({\n  type: SELECT_CUSTOMER,\n  payload: customer,\n});\n\nexport const updateCustomerAction = (customer) => ({\n  type: UPDATE_CUSTOMER,\n  payload: customer,\n});\n\nexport const deleteCustomerAction = (customer) => ({\n  type: DELETE_CUSTOMER,\n  payload: customer,\n});\n\nexport const addCustomerAction = (customer) => ({\n  type: ADD_CUSTOMER,\n  payload: customer,\n});\n","import {\n  ADD_CUSTOMER,\n  UPDATE_CUSTOMER,\n  SELECT_CUSTOMER,\n  LOAD_CUSTOMER,\n  DELETE_CUSTOMER,\n\n} from './customer.actions';\n\nexport const customersReducer = (state = { data: [] }, action) => {\n  switch (action.type) {\n    case LOAD_CUSTOMER:\n      return { ...state };\n\n    case UPDATE_CUSTOMER:\n      return modifyCustomerState(state, action.payload);\n\n    case DELETE_CUSTOMER: {\n      return {\n        ...state,\n        data: state.data.filter((c) => c !== action.payload),\n      };\n    }\n\n    case ADD_CUSTOMER: {\n      return {\n        ...state,\n        data: [...state.data, { ...action.payload }],\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst modifyCustomerState = (customerState, customerChanges) => {\n  return {\n    ...customerState,\n    data: customerState.data.map((c) => {\n      if (c.id === customerChanges.id) {\n        return { ...c, ...customerChanges };\n      } else {\n        return c;\n      }\n    }),\n  };\n};\n\nlet initialSelectedCustomer = null;\n\nexport const selectedCustomerReducer = (\n  state = initialSelectedCustomer,\n  action\n) => {\n  switch (action.type) {\n    case SELECT_CUSTOMER:\n      return action.payload ? { ...action.payload } : null;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { customersReducer, selectedCustomerReducer } from './customer.reducer';\n\nexport * from './customer.actions';\nexport * from './customer.reducer';\n\nconst store = combineReducers({\n  customers: customersReducer,\n  selectedCustomer: selectedCustomerReducer,\n});\n\nexport default store;\n","import React from 'react';\n\n// Table structure\n\nexport const Header = ({ column }) => {\n  return (\n    <th\n      {...column.getHeaderProps(column.getSortByToggleProps())}\n      className=\"text-nowrap px-2\"\n    >\n      <div className=\"d-flex align-items-center\">\n        {column.render('Header')}\n        {column.canSort && (\n          <div\n            className={`sort-indicator text-right small ${\n              column.isSorted\n                ? column.isSortedDesc\n                  ? 'sort-indicator--desc'\n                  : 'sort-indicator--asc'\n                : 'sort-indicator--unsorted'\n            }`}\n          ></div>\n        )}\n      </div>\n    </th>\n  );\n};\n\nexport const Row = (props) => {\n    return (<tr>{props.children}</tr>);\n  };\n\nexport const Cell = ({ cell }) => {\n  return <td {...cell.getCellProps()} className=\"p-2\">{cell.render('Cell')}</td>;\n};\n","import React from 'react';\n\n// Presets\n\nconst CustomHeader = (props, alignRight) => {\n  return (\n    <span className={alignRight && 'flex-grow-1 text-right'}>\n      {props.children}\n    </span>\n  );\n};\n\nconst CustomCell = (props, alignRight) => {\n  let className = '';\n  if (props.bold) {\n    className += 'font-weight-bolder ';\n  }\n  if (props.alignRight) {\n    className += 'd-inline-block w-100 text-right';\n  }\n  if (props.truncate) {\n    className += 'cell-text--truncate ';\n  }\n  return <span {...{ className }}>{props.children}</span>;\n};\n\nconst Coordinates = ({ lat, lng }) => {\n  return (\n    <>\n      {lat && (\n        <a\n          href={`https://www.google.com/maps/place/${lat},${lng}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {lat}, {lng}\n        </a>\n      )}\n    </>\n  );\n};\n\nconst Actions = ({ onEditClicked, onDeleteClicked, customer }) => {\n  return (\n    <>\n      <span\n        className=\"btn btn-link align-baseline p-0 mr-3\"\n        onClick={() => onEditClicked(customer)}\n        role=\"link\"\n        tabIndex=\"0\"\n      >\n        Edit\n      </span>\n      <span\n        className=\"btn btn-link align-baseline p-0 text-danger\"\n        onClick={() => onDeleteClicked(customer)}\n        role=\"link\"\n        tabIndex=\"0\"\n      >\n        Delete\n      </span>\n    </>\n  );\n};\n\n// Column specification\n\nexport const columnSetup = ({ onEditClicked, onDeleteClicked }) => {\n  return [\n    {\n      accessor: 'name',\n      Header: 'Full name',\n    },\n    {\n      accessor: 'email',\n      Header: 'Email',\n      Cell: ({ value }) => (\n        <CustomCell truncate>\n          <a href={`mailto:${value}`}>{value}</a>\n        </CustomCell>\n      ),\n    },\n    {\n      accessor: 'city',\n      Header: 'City',\n    },\n    {\n      accessor: 'street',\n      Header: 'Street',\n    },\n    {\n      accessor: 'house',\n      Header: () => <CustomHeader alignRight>House</CustomHeader>,\n      Cell: ({ value }) => <CustomCell alignRight>{value}</CustomCell>,\n    },\n    {\n      accessor: 'zip',\n      Header: () => <CustomHeader alignRight>Zip</CustomHeader>,\n      Cell: ({ value }) => <CustomCell alignRight>{value}</CustomCell>,\n    },\n    {\n      accessor: 'coordinates',\n      Header: () => <CustomHeader alignRight>Location</CustomHeader>,\n      Cell: ({ row }) => (\n        <CustomCell alignRight>\n          <Coordinates lat={row.original.lat} lng={row.original.lng} />\n        </CustomCell>\n      ),\n    },\n    {\n      accessor: 'actions',\n      disableSortBy: true,\n      Cell: ({ row }) => (\n        <Actions\n          customer={row.original}\n          {...{ onEditClicked }}\n          {...{ onDeleteClicked }}\n        />\n      ),\n    },\n  ];\n};\n","// Case-insensitive sorting\n\nconst compareIgnoreCase = (a, b) => {\n  let r1 = (a && a.toLowerCase()) || '';\n  let r2 = (b && b.toLowerCase()) || '';\n  if (r1 < r2) {\n    return -1;\n  }\n  if (r1 > r2) {\n    return 1;\n  }\n  return 0;\n};\n\nexport default compareIgnoreCase;\n","import React, { useMemo } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { useTable, useSortBy } from 'react-table';\nimport { Header, Row, Cell } from './GridRenderers';\nimport { columnSetup } from './CellTemplates';\nimport compareIgnoreCase from './sortHelper';\nimport './Grid.css';\n\nconst CustomersGrid = ({ customers, onEditClicked, onDeleteClicked }) => {\n  const data = useMemo(() => customers, [customers]);\n\n  const columns = useMemo(\n    () => columnSetup({ onEditClicked, onDeleteClicked }),\n    [onEditClicked, onDeleteClicked]\n  );\n\n  const { headers, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n      sortTypes: {\n        alphanumeric: (row1, row2, columnName) => {\n          // Case-insensitive sorting\n          return compareIgnoreCase(\n            row1.values[columnName],\n            row2.values[columnName]\n          );\n        },\n      },\n    },\n    useSortBy\n  );\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          {headers.map((column) => (\n            <Header {...{ column }} key={column.id} />\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <Row {...{ row }} key={row.id}>\n              {row.cells.map((cell) => {\n                return <Cell {...{ cell }} key={cell.column.id} />;\n              })}\n            </Row>\n          );\n        })}\n      </tbody>\n\n      {!data.length && (\n        <tfoot>\n          <tr>\n            <td colSpan=\"8\"> No registered customers</td>\n          </tr>\n        </tfoot>\n      )}\n    </Table>\n  );\n};\n\nexport default CustomersGrid;\n","import { useState, useEffect } from 'react';\nimport { useDebounce } from 'use-debounce';\nimport axios from 'axios';\n\nconst useMapboxApi = ({customer}) => {\n  const [house, setHouse] = useState(null);\n  const [street, setStreet] = useState(null);\n  const [city, setCity] = useState(null);\n  const [zip, setZip] = useState(null);\n\n  const [address, setAddress] = useState(null);\n  const [coordinates, setCoordinates] = useState(null);\n  const [isError, setIsError] = useState(false);\n\n  // Limit API requests when typing into address fields\n  const [debouncedAddress] = useDebounce(address, 500);\n\n  useEffect(() => {\n    if (customer) {\n      setHouse(customer.house);\n      setStreet(customer.street);\n      setCity(customer.city);\n      setZip(customer.zip);\n    }\n  }, [customer]);\n\n  // Reassemble address on form input change\n  useEffect(() => {\n    let assemble = '';\n    if (house) {\n      assemble = ' ' + house;\n    }\n    if (street) {\n      assemble = assemble.concat(' ' + street);\n    }\n    if (zip) {\n      assemble = assemble.concat(' ' + zip);\n    }\n    if (city) {\n      assemble = assemble.concat(' ' + city);\n    }\n\n    // Don't query API if street and/or city values are missing or very short\n    if ((street && street.length > 2) || (city && city.length > 2)) {\n      setAddress(assemble.slice(1, assemble.length));\n    } else {\n      setCoordinates(null);\n    }\n  }, [house, street, city, zip]);\n\n  useEffect(() => {\n    let fetchData;\n    let url;\n    if (debouncedAddress) {\n      url =\n        'https://api.mapbox.com/geocoding/v5/mapbox.places/' +\n        debouncedAddress +\n        '.json?limit=1&access_token=' +\n        process.env.REACT_APP_CUSTOMERS_MAPBOX_TOKEN;\n\n      fetchData = async () => {\n        try {\n          setCoordinates(null);\n          setIsError(false);\n          const response = await axios(url);\n          setCoordinates([\n            response.data.features[0].center[1].toPrecision(7),\n            response.data.features[0].center[0].toPrecision(7),\n          ]);\n        } catch (error) {\n          setIsError(true);\n        }\n      };\n      fetchData();\n    }\n  }, [customer.lat, debouncedAddress]);\n\n  return [{ coordinates, isError }];\n};\n\nexport default useMapboxApi;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Button, Modal, Form, Col } from 'react-bootstrap';\nimport useMapboxApi from './useMapboxApi';\n\nconst CustomerForm = ({\n  selectedCustomer,\n  action,\n  onSaveConfirmed,\n  onModalClosed,\n}) => {\n  const [customer, setCustomer] = useState(selectedCustomer);\n  const [validated, setValidated] = useState(false);\n  const [{ coordinates, isError }] = useMapboxApi({ customer });\n\n  useEffect(() => {\n    setCustomer(selectedCustomer);\n  }, [selectedCustomer]);\n\n  useEffect(() => {\n    const injectCoordinates = customer;\n    if (coordinates) {\n      injectCoordinates.lat = coordinates[0];\n      injectCoordinates.lng = coordinates[1];\n    }\n    setCustomer(injectCoordinates);\n  }, [customer, coordinates]);\n\n  const onHide = () => {\n    onModalClosed();\n    setValidated(false);\n  };\n\n  // Set focus to first form field on opening\n  const firstInput = useRef();\n  useEffect(() => {\n    if (action === 'add' || action === 'update') {\n      firstInput.current.focus();\n    }\n  }, [action]);\n\n  // Make Bootstrap work with native HTML5 form validation\n  const onSubmit = (e) => {\n    setValidated(true);\n    if (e.currentTarget.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      onSaveConfirmed(customer);\n      onModalClosed();\n      e.preventDefault();\n      setValidated(false);\n    }\n  };\n\n  return (\n    <Modal\n      show={action === 'add' || action === 'update'}\n      animation={false}\n      backdrop=\"static\"\n      {...{ onHide }}\n      centered\n    >\n      <Modal.Header closeButton>\n        {action === 'add' ? (\n          <Modal.Title>New customer</Modal.Title>\n        ) : (\n          <Modal.Title>Edit customer</Modal.Title>\n        )}\n      </Modal.Header>\n\n      <Form noValidate {...{ validated }} {...{ onSubmit }}>\n        <Modal.Body>\n          <Form.Group controlId=\"name\">\n            <Form.Label>\n              Full name <span className=\"text-danger\">*</span>\n            </Form.Label>\n            <Form.Control\n              value={customer.name || ''}\n              onChange={(e) => {\n                setCustomer({ ...customer, name: e.target.value });\n              }}\n              ref={firstInput}\n              required\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter the customer name.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              type=\"email\"\n              value={customer.email || ''}\n              onChange={(e) => {\n                setCustomer({ ...customer, email: e.target.value });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Invalid email format.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"city\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                value={customer.city || ''}\n                onChange={(e) =>\n                  setCustomer({ ...customer, city: e.target.value })\n                }\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"street\">\n              <Form.Label>Street</Form.Label>\n              <Form.Control\n                value={customer.street || ''}\n                onChange={(e) =>\n                  setCustomer({ ...customer, street: e.target.value })\n                }\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"house\">\n              <Form.Label>House number</Form.Label>\n              <Form.Control\n                value={customer.house || ''}\n                onChange={(e) =>\n                  setCustomer({ ...customer, house: e.target.value })\n                }\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"zip\">\n              <Form.Label>Zip code</Form.Label>\n              <Form.Control\n                value={customer.zip || ''}\n                onChange={(e) =>\n                  setCustomer({ ...customer, zip: e.target.value })\n                }\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Group controlId=\"coordinates\">\n            <Form.Label>Predicted location</Form.Label>\n            <Form.Control\n              value={coordinates ? `${coordinates[0]}, ${coordinates[1]}` : ''}\n              placeholder={isError ? 'Could not fetch coordinates' : ''}\n              disabled\n            />\n          </Form.Group>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={onHide}>\n            Cancel\n          </Button>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Save customer\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default CustomerForm;\n","import React from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst DeleteDialog = ({\n  customerToDelete,\n  action,\n  onDeleteConfirmed,\n  onModalClosed,\n}) => {\n\n  return (\n    <Modal show={action === 'delete'} onHide={onModalClosed} animation={false} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Delete customer</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        Are you sure you want to delete customer{' '}\n        <strong>{customerToDelete ? customerToDelete.name : ''}</strong>?\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onModalClosed}>\n          Cancel\n        </Button>\n\n          <Button variant=\"danger\" onClick={onDeleteConfirmed}>\n            Delete customer\n          </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default DeleteDialog;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addCustomerAction,\n  deleteCustomerAction,\n  loadCustomersAction,\n  selectCustomerAction,\n  updateCustomerAction\n} from '../store';\n\nfunction useCustomers() {\n  const dispatch = useDispatch();\n\n  return {\n    // Selectors\n    customers: useSelector(state => state.customers.data),\n    selectedCustomer: useSelector(state => state.selectedCustomer),\n\n    // Dispatchers\n    addCustomer: customer => dispatch(addCustomerAction(customer)),\n    deleteCustomer: customer => dispatch(deleteCustomerAction(customer)),\n    getCustomers: useCallback(() => dispatch(loadCustomersAction()), [dispatch]),\n    selectCustomer: customer => dispatch(selectCustomerAction(customer)),\n    updateCustomer: customer => dispatch(updateCustomerAction(customer))\n  };\n}\n\nexport default useCustomers;\n","import React, { useEffect, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Container, Button } from 'react-bootstrap';\nimport Grid from './grid/Grid';\nimport CustomerForm from './CustomerForm';\nimport DeleteDialog from './DeleteDialog';\nimport useCustomers from './useCustomers';\n\nfunction Customers() {\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  const [action, setAction] = useState(null);\n\n  const {\n    addCustomer,\n    deleteCustomer,\n    getCustomers,\n    customers,\n    selectCustomer,\n    selectedCustomer,\n    updateCustomer,\n  } = useCustomers();\n\n  const onNewCustomerClicked = () => {\n    selectCustomer({});\n    setAction('add');\n  };\n\n  const onEditClicked = (customer) => {\n    selectCustomer(customer);\n    setAction('update');\n  };\n\n  const onDeleteClicked = (customer) => {\n    setCustomerToDelete(customer);\n    setAction('delete');\n  };\n\n  const onSaveConfirmed = (customer) => {\n    if (action === 'add') {\n      // Generate unique id\n      customer.id = nanoid();\n      addCustomer(customer);\n    } else {\n      updateCustomer(customer);\n    }\n    onModalClosed();\n  };\n\n  const onDeleteConfirmed = () => {\n    deleteCustomer(customerToDelete);\n    onModalClosed();\n  };\n\n  const onModalClosed = () => {\n    getCustomers();\n    selectCustomer(null);\n    setCustomerToDelete(null);\n    setAction(null);\n  };\n\n  useEffect(() => {\n    getCustomers();\n  }, [getCustomers]);\n\n  return (\n    <Container fluid=\"xl\">\n      <div className=\"d-flex justify-content-between align-items-center my-5\">\n        <h1 className=\"mb-0\">Customers</h1>\n        <Button variant=\"primary\" onClick={onNewCustomerClicked}>\n          New customer\n        </Button>\n      </div>\n\n      <Grid\n        {...{ customers }}\n        {...{ onEditClicked }}\n        {...{ onDeleteClicked }}\n      />\n\n      <DeleteDialog\n        {...{ customerToDelete }}\n        {...{ action }}\n        {...{ onDeleteConfirmed }}\n        {...{ onModalClosed }}\n      />\n\n      {selectedCustomer && (\n        <CustomerForm\n          {...{ selectedCustomer }}\n          {...{ action }}\n          {...{ onSaveConfirmed }}\n          {...{ onModalClosed }}\n        />\n      )}\n    </Container>\n  );\n}\n\nexport default Customers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport customersStore from './store';\nimport { loadState, saveState } from './store/localStorage';\nimport Customers from './customers/Customers';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n// loadState() and saveState() persists data in local storage\nconst persistedState = loadState();\nconst store = createStore(customersStore, persistedState);\nstore.subscribe(() => {\n  saveState({\n    customers: store.getState().customers,\n  });\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Customers />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('customersDemoApp');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('customersDemoApp', serializedState);\n  } catch {\n    // Catching to prevent app crash if local storage is disabled\n  }\n};\n"],"sourceRoot":""}